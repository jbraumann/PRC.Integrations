syntax = "proto3";

option csharp_namespace = "PRC.GRPC";

import "Protos/primitives.proto";

//SimulationResult contains the result of the robot simulation.
message SimulationResult{
	//Each (interpolated) command is represented by a SimulationResultUnit.
	repeated SimulationResultUnit simulation_results = 1;
	//IsValid is true if there are no reachability or collision problems.
	bool is_valid = 2;
	//Time is the total time in seconds.
	float time = 3;
	//Code contains the robot control data, to be written locally into a file with the suitable extension.
	string code = 4;
	//MetaData contains additional, optional information
	MetaData data = 5;
}

//SimulationResultUnit contains the result of a single robot simulation step.
message SimulationResultUnit{
	//AxisValues contains the joint values of the robot at that position.
	repeated float axis_values = 1;
	//The Cartesian position of the robot.
	Matrix4x4 position = 2;
	//Time is the calculated time in seconds between the start of the simulation and the current SimulationResultUnit
	float time = 3;
	//One collision value per axis, set when the robot collides. Only active with collision checking enabled.
	repeated bool collision = 4;
	//One singularity value per axis, set when the robot is in a singularity.
	repeated bool singularity = 5;
	//One out of reach value per axis, set when the robot is out of reach.
	repeated bool outofreach = 6;
	//AxisValues contains the joint values of the robot at that position.
	repeated float external_axis_values = 7;
	//One out of reach value per external axis, set when the external axis is out of reach.
	repeated bool external_axis_outofreach = 8;
	//The InterpolationFactor describes whether a value is interpolated or not.
	float interpolation_factor = 9;
	//The Id is used to match the SimulationResultUnit with the initial simulation input.
	string id = 10;
}

//RobotState is used the visualize the current or simulated state of the robot.
message RobotState{
	//The actual axis position of the robot.
	JointTarget actual_axis_position = 1;
	//A list of transformations for each axis plus base of the robot. First array is the robot, followed by an array for each external axis. To be applied in relation to WorldXY - right-handed coordinate system with Z+ = up.
	repeated TransformationArray robot_transformations = 2;
	//Normalized value describing the relative position along the toolpath.
	float toolpath_index = 3;
	//The ID of the actual tool.
	string tool_id = 4;
	//The position and orientation of the robot's TCP.
	Matrix4x4 tool_frame = 5;
	//The robot's root frame.
	Matrix4x4 root_frame = 6;
	//The position and orientation of the flange of the robot.
	Matrix4x4 flange_frame = 7;
	//A list of one boolean value per axis, to visually alert to unreachable positions or collisions.
	repeated bool axis_alarm = 8;
	//A list of one boolean value per external axis, to visually alert to unreachable positions or collisions.
	repeated bool external_axis_alarm = 9;
	//The current variables used at all the robots connected to the server, structured as a dictionary where the key is the ID of the robot and the value a list of its variables.
	map<string, VariableArray> variables = 10;
	//A dictionary for additional data.
	map<string, string> data = 11;
	//Connection feedback
	string connection_feedback = 12;
}


