syntax = "proto3";

option csharp_namespace = "PRC.GRPC";

import "Protos/primitives.proto";
import "Protos/robotdata.proto";

//The MotionCommand can contain either an AxisMotion, CircularMotion, PTPMotion or LINMotion. Take care to use e.g. a LINMotion only within CP motion group.
message MotionCommand{
	oneof command {
		//The AxisMotion describes a robot position through its joint values.
        AxisMotion axis_motion = 1;
		//The CircularMotion describes a circular motion through three coordinate systems.
        CircularMotion circular_motion = 2;
		//The PTPMotion describes a point-to-point motion through a Cartesian target.
        PTPMotion ptp_motion = 3;
		//The LINMotion describes a linear motion through a Cartesian target.
        LINMotion lin_motion = 4;
    }
}

//The MotionGroup groups several motion commands, which share a type (CP, PTP, Spline), a tool and a base.
message MotionGroup{
	//The MotionGroupType can bei either CP, PTP, or SPLINE
    MotionGroupType motion_group_type = 1;
	//The list of MotionCommands. Take care to use commands that can be used the with current MotionGroupType (e.g. no AxisMotion commands when MotionGroupType is set to CP).
	repeated MotionCommand commands = 2;
	//The selected interpolation is output in the code, but currently not simulated.
	string interpolation = 3;
	//The tool ID, referring the the tool dictionary as defined in the Robot object.
	string tool_id = 4;
	//The base values to be used with the current motion group.
	Base robot_base = 5;
	//Additional data.
	MetaData data = 6;
}

//The AxisMotion describes a robot position through its joint values.
message AxisMotion{
	//Additional data.
	MetaData data = 1;
	//The target described through joint values.
	JointTarget target = 2;
}
//The CircularMotion describes a circular motion through three Cartsian positions.
message CircularMotion{
	//Additional data.	
	MetaData data = 1;
	//The circular motion described through three Cartesian positions.
	repeated CartesianTarget targets = 2;
}

//The LINMotion describes a linear motion through a Cartesian target.
message LINMotion{
	//Additional data.
	MetaData data = 1;
	//The target described through Cartesian values.
	CartesianTarget target = 2;
}

//The PTPMotion describes a point-to-point motion through a Cartesian target.
message PTPMotion{
	//Additional data.
	MetaData data = 1;
	//The target described through Cartesian values.
	CartesianTarget target = 2;
}
